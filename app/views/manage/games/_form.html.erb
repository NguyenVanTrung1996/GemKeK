    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
      <h3><%=@game.name.nil? ? "New Game" : "Edit Game" %></h3>
    </div>
  <%= form_for [:manage, @game] do |f| %>
  <div class="modal-body">
     <div class="col-md-6">
        <div class="form-group">
          <%= f.label :name, 'Game Title' %>
          <%= f.text_field :name, class:"form-control"%>
        </div>
       
      </div>
       
       <div class="col-md-12">
        <div class="form-group">
          <%= f.label :genres_of_game_ids, "Genre"%>
          <%= f.select(:genres_of_game_ids, Genre.all.collect {|a| [a.name, a.id]}, {}, class:"form-control", id: "genre_game_ids", :multiple => true) %>
        </div>
      </div>
      <div class="col-md-12">
        <div class="form-group">
          <%= f.label :platform_of_game_ids, "Platform"%>
          <%= f.select(:platform_of_game_ids, Platform.all.collect {|a| [a.name, a.id]}, {}, class:"form-control", id: "platform_game_ids", :multiple => true) %>
        </div>
      </div>
      <div class="col-md-12">
        <div class="form-group">
         <%= f.label :summary, 'Content' %>
         <%= f.text_area :summary, class:'form-control', rows:'5'%>
        </div>
      </div>
      <div class="col-md-12">
        <div class="form-group">
           <%= f.file_field :images, multiple: true, id: "game_photos", name: "game_photos[photo][]", class: "upload-image" %>
        </div>   
      </div>
           
  </div>
  <div style="margin-left: 15px;"> 
     <% @game.photos.each do |p| %>
      <% unless p.image_url.nil? %>
       <%=image_tag p.image_url, style: "max-width: 200px; max-height: 200px"%>
      <% end %>
 
      <%end%>
  </div>
  
  <div class="modal-footer">
    <%= f.submit @game.name.nil? ? "Create" : "Update" , class:'btn btn-default' %> 
  </div>
 <%end%>
 <style type="text/css">
 .select2-container--default .select2-selection--multiple .select2-selection__choice {
  color: black;
}

 </style>
 <script type="text/javascript">
 
   $("#genre_game_ids").select2({
      tags:[],
      maximumInputLength: 100
    });
    function log(e) {
      var e=$("<li>"+e+"</li>");
      console.log(e);
    }
   $("#genre_game_ids")
    .on("change", function(e) { log("change "+JSON.stringify({val:e.val, added:e.added, removed:e.removed}));
                                  console.log(e.val+""); })
    .on("select2-opening", function() { console.log("opening"); })
    .on("select2-open", function() { log("open"); })
    .on("select2-close", function() { log("close"); })
    .on("select2-highlight", function(e) { log ("highlighted val="+ e.val+" choice="+ JSON.stringify(e.choice));})
    .on("select2-selecting", function(e) { log ("selecting val="+ e.val+" choice="+ JSON.stringify(e.choice));})
    .on("select2-removing", function(e) { log ("removing val="+ e.val+" choice="+ JSON.stringify(e.choice));})
    .on("select2-removed", function(e) { log ("removed val="+ e.val+" choice="+ JSON.stringify(e.choice));})
    .on("select2-loaded", function(e) { log ("loaded (data property omitted for brevity)");})
    .on("select2-focus", function(e) { log ("focus");})
    .on("select2-blur", function(e) { log ("blur");});

   $('#platform_game_ids').select2({
    });


(function() {
  var multiPhotoDisplay;

  $('#game_photos').on('change', function(e) {
    console.log("thangtqtttt");
    return multiPhotoDisplay(this);
  });

  this.readURL = function(input) {
    var reader;
    if (input.files && input.files[0]) {
      reader = new FileReader();
      reader.onload = function(e) {
        var $preview;
        $('.image_to_upload').attr('src', e.target.result);
        $preview = $('.preview');
        if ($preview.hasClass('hide')) {
          return $preview.toggleClass('hide');
        }
      };
      return reader.readAsDataURL(input.files[0]);
    }
  };

  multiPhotoDisplay = function(input) {
    var file, reader, _i, _len, _ref;
    if (input.files && input.files[0]) {
      _ref = input.files;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        reader = new FileReader();
        reader.onload = function(e) {
          var image_html;
          image_html = "<li><a class=\"th\" href=\"" + e.target.result + "\"><img width=\"75\" src=\"" + e.target.result + "\"></a></li>";
          $('#photos_clearing').append(image_html);
          if ($('.pics-label.hide').length !== 0) {
            $('.pics-label').toggle('hide').removeClass('hide');
          }
          return $(document).foundation('reflow');
        };
        reader.readAsDataURL(file);
      }
      window.post_files = input.files;
      if (window.post_files !== void 0) {
        return input.files = $.merge(window.post_files, input.files);
      }
    }
  };

}).call(this);
 </script>
